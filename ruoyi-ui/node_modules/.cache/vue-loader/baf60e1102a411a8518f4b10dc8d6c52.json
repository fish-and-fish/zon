{"remainingRequest":"/Users/linglong/Documents/code/RuoYi-Vue/ruoyi-ui/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/linglong/Documents/code/RuoYi-Vue/ruoyi-ui/src/components/FileUpload/index.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/linglong/Documents/code/RuoYi-Vue/ruoyi-ui/src/components/FileUpload/index.vue","mtime":1754723515916},{"path":"/Users/linglong/Documents/code/RuoYi-Vue/ruoyi-ui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/linglong/Documents/code/RuoYi-Vue/ruoyi-ui/node_modules/babel-loader/lib/index.js","mtime":456789000000},{"path":"/Users/linglong/Documents/code/RuoYi-Vue/ruoyi-ui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/linglong/Documents/code/RuoYi-Vue/ruoyi-ui/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB7IGdldFRva2VuIH0gZnJvbSAiQC91dGlscy9hdXRoIgppbXBvcnQgU29ydGFibGUgZnJvbSAnc29ydGFibGVqcycKCmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAiRmlsZVVwbG9hZCIsCiAgcHJvcHM6IHsKICAgIC8vIOWAvAogICAgdmFsdWU6IFtTdHJpbmcsIE9iamVjdCwgQXJyYXldLAogICAgLy8g5LiK5Lyg5o6l5Y+j5Zyw5Z2ACiAgICBhY3Rpb246IHsKICAgICAgdHlwZTogU3RyaW5nLAogICAgICBkZWZhdWx0OiAiL2NvbW1vbi91cGxvYWQiCiAgICB9LAogICAgLy8g5LiK5Lyg5pC65bim55qE5Y+C5pWwCiAgICBkYXRhOiB7CiAgICAgIHR5cGU6IE9iamVjdAogICAgfSwKICAgIC8vIOaVsOmHj+mZkOWItgogICAgbGltaXQ6IHsKICAgICAgdHlwZTogTnVtYmVyLAogICAgICBkZWZhdWx0OiA1CiAgICB9LAogICAgLy8g5aSn5bCP6ZmQ5Yi2KE1CKQogICAgZmlsZVNpemU6IHsKICAgICAgdHlwZTogTnVtYmVyLAogICAgICBkZWZhdWx0OiA1CiAgICB9LAogICAgLy8g5paH5Lu257G75Z6LLCDkvovlpoJbJ3BuZycsICdqcGcnLCAnanBlZyddCiAgICBmaWxlVHlwZTogewogICAgICB0eXBlOiBBcnJheSwKICAgICAgZGVmYXVsdDogKCkgPT4gWyJkb2MiLCAiZG9jeCIsICJ4bHMiLCAieGxzeCIsICJwcHQiLCAicHB0eCIsICJ0eHQiLCAicGRmIl0KICAgIH0sCiAgICAvLyDmmK/lkKbmmL7npLrmj5DnpLoKICAgIGlzU2hvd1RpcDogewogICAgICB0eXBlOiBCb29sZWFuLAogICAgICBkZWZhdWx0OiB0cnVlCiAgICB9LAogICAgLy8g56aB55So57uE5Lu277yI5LuF5p+l55yL5paH5Lu277yJCiAgICBkaXNhYmxlZDogewogICAgICB0eXBlOiBCb29sZWFuLAogICAgICBkZWZhdWx0OiBmYWxzZQogICAgfSwKICAgIC8vIOaLluWKqOaOkuW6jwogICAgZHJhZzogewogICAgICB0eXBlOiBCb29sZWFuLAogICAgICBkZWZhdWx0OiB0cnVlCiAgICB9CiAgfSwKICBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgbnVtYmVyOiAwLAogICAgICB1cGxvYWRMaXN0OiBbXSwKICAgICAgYmFzZVVybDogcHJvY2Vzcy5lbnYuVlVFX0FQUF9CQVNFX0FQSSwKICAgICAgdXBsb2FkRmlsZVVybDogcHJvY2Vzcy5lbnYuVlVFX0FQUF9CQVNFX0FQSSArIHRoaXMuYWN0aW9uLCAvLyDkuIrkvKDmlofku7bmnI3liqHlmajlnLDlnYAKICAgICAgaGVhZGVyczogewogICAgICAgIEF1dGhvcml6YXRpb246ICJCZWFyZXIgIiArIGdldFRva2VuKCksCiAgICAgIH0sCiAgICAgIGZpbGVMaXN0OiBbXQogICAgfQogIH0sCiAgbW91bnRlZCgpIHsKICAgIGlmICh0aGlzLmRyYWcgJiYgIXRoaXMuZGlzYWJsZWQpIHsKICAgICAgdGhpcy4kbmV4dFRpY2soKCkgPT4gewogICAgICAgIGNvbnN0IGVsZW1lbnQgPSB0aGlzLiRyZWZzLnVwbG9hZEZpbGVMaXN0Py4kZWwgfHwgdGhpcy4kcmVmcy51cGxvYWRGaWxlTGlzdAogICAgICAgIFNvcnRhYmxlLmNyZWF0ZShlbGVtZW50LCB7CiAgICAgICAgICBnaG9zdENsYXNzOiAnZmlsZS11cGxvYWQtZGFyZycsCiAgICAgICAgICBvbkVuZDogKGV2dCkgPT4gewogICAgICAgICAgICBjb25zdCBtb3ZlZEl0ZW0gPSB0aGlzLmZpbGVMaXN0LnNwbGljZShldnQub2xkSW5kZXgsIDEpWzBdCiAgICAgICAgICAgIHRoaXMuZmlsZUxpc3Quc3BsaWNlKGV2dC5uZXdJbmRleCwgMCwgbW92ZWRJdGVtKQogICAgICAgICAgICB0aGlzLiRlbWl0KCJpbnB1dCIsIHRoaXMubGlzdFRvU3RyaW5nKHRoaXMuZmlsZUxpc3QpKQogICAgICAgICAgfQogICAgICAgIH0pCiAgICAgIH0pCiAgICB9CiAgfSwKICB3YXRjaDogewogICAgdmFsdWU6IHsKICAgICAgaGFuZGxlcih2YWwpIHsKICAgICAgICBpZiAodmFsKSB7CiAgICAgICAgICBsZXQgdGVtcCA9IDEKICAgICAgICAgIC8vIOmmluWFiOWwhuWAvOi9rOS4uuaVsOe7hAogICAgICAgICAgY29uc3QgbGlzdCA9IEFycmF5LmlzQXJyYXkodmFsKSA/IHZhbCA6IHRoaXMudmFsdWUuc3BsaXQoJywnKQogICAgICAgICAgLy8g54S25ZCO5bCG5pWw57uE6L2s5Li65a+56LGh5pWw57uECiAgICAgICAgICB0aGlzLmZpbGVMaXN0ID0gbGlzdC5tYXAoaXRlbSA9PiB7CiAgICAgICAgICAgIGlmICh0eXBlb2YgaXRlbSA9PT0gInN0cmluZyIpIHsKICAgICAgICAgICAgICBpdGVtID0geyBuYW1lOiBpdGVtLCB1cmw6IGl0ZW0gfQogICAgICAgICAgICB9CiAgICAgICAgICAgIGl0ZW0udWlkID0gaXRlbS51aWQgfHwgbmV3IERhdGUoKS5nZXRUaW1lKCkgKyB0ZW1wKysKICAgICAgICAgICAgcmV0dXJuIGl0ZW0KICAgICAgICAgIH0pCiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgIHRoaXMuZmlsZUxpc3QgPSBbXQogICAgICAgICAgcmV0dXJuIFtdCiAgICAgICAgfQogICAgICB9LAogICAgICBkZWVwOiB0cnVlLAogICAgICBpbW1lZGlhdGU6IHRydWUKICAgIH0KICB9LAogIGNvbXB1dGVkOiB7CiAgICAvLyDmmK/lkKbmmL7npLrmj5DnpLoKICAgIHNob3dUaXAoKSB7CiAgICAgIHJldHVybiB0aGlzLmlzU2hvd1RpcCAmJiAodGhpcy5maWxlVHlwZSB8fCB0aGlzLmZpbGVTaXplKQogICAgfSwKICB9LAogIG1ldGhvZHM6IHsKICAgIC8vIOS4iuS8oOWJjeagoeajgOagvOW8j+WSjOWkp+WwjwogICAgaGFuZGxlQmVmb3JlVXBsb2FkKGZpbGUpIHsKICAgICAgLy8g5qCh5qOA5paH5Lu257G75Z6LCiAgICAgIGlmICh0aGlzLmZpbGVUeXBlKSB7CiAgICAgICAgY29uc3QgZmlsZU5hbWUgPSBmaWxlLm5hbWUuc3BsaXQoJy4nKQogICAgICAgIGNvbnN0IGZpbGVFeHQgPSBmaWxlTmFtZVtmaWxlTmFtZS5sZW5ndGggLSAxXQogICAgICAgIGNvbnN0IGlzVHlwZU9rID0gdGhpcy5maWxlVHlwZS5pbmRleE9mKGZpbGVFeHQpID49IDAKICAgICAgICBpZiAoIWlzVHlwZU9rKSB7CiAgICAgICAgICB0aGlzLiRtb2RhbC5tc2dFcnJvcihg5paH5Lu25qC85byP5LiN5q2j56Gu77yM6K+35LiK5LygJHt0aGlzLmZpbGVUeXBlLmpvaW4oIi8iKX3moLzlvI/mlofku7YhYCkKICAgICAgICAgIHJldHVybiBmYWxzZQogICAgICAgIH0KICAgICAgfQogICAgICAvLyDmoKHmo4Dmlofku7blkI3mmK/lkKbljIXlkKvnibnmrorlrZfnrKYKICAgICAgaWYgKGZpbGUubmFtZS5pbmNsdWRlcygnLCcpKSB7CiAgICAgICAgdGhpcy4kbW9kYWwubXNnRXJyb3IoJ+aWh+S7tuWQjeS4jeato+ehru+8jOS4jeiDveWMheWQq+iLseaWh+mAl+WPtyEnKQogICAgICAgIHJldHVybiBmYWxzZQogICAgICB9CiAgICAgIC8vIOagoeajgOaWh+S7tuWkp+WwjwogICAgICBpZiAodGhpcy5maWxlU2l6ZSkgewogICAgICAgIGNvbnN0IGlzTHQgPSBmaWxlLnNpemUgLyAxMDI0IC8gMTAyNCA8IHRoaXMuZmlsZVNpemUKICAgICAgICBpZiAoIWlzTHQpIHsKICAgICAgICAgIHRoaXMuJG1vZGFsLm1zZ0Vycm9yKGDkuIrkvKDmlofku7blpKflsI/kuI3og73otoXov4cgJHt0aGlzLmZpbGVTaXplfSBNQiFgKQogICAgICAgICAgcmV0dXJuIGZhbHNlCiAgICAgICAgfQogICAgICB9CiAgICAgIHRoaXMuJG1vZGFsLmxvYWRpbmcoIuato+WcqOS4iuS8oOaWh+S7tu+8jOivt+eojeWAmS4uLiIpCiAgICAgIHRoaXMubnVtYmVyKysKICAgICAgcmV0dXJuIHRydWUKICAgIH0sCiAgICAvLyDmlofku7bkuKrmlbDotoXlh7oKICAgIGhhbmRsZUV4Y2VlZCgpIHsKICAgICAgdGhpcy4kbW9kYWwubXNnRXJyb3IoYOS4iuS8oOaWh+S7tuaVsOmHj+S4jeiDvei2hei/hyAke3RoaXMubGltaXR9IOS4qiFgKQogICAgfSwKICAgIC8vIOS4iuS8oOWksei0pQogICAgaGFuZGxlVXBsb2FkRXJyb3IoZXJyKSB7CiAgICAgIHRoaXMuJG1vZGFsLm1zZ0Vycm9yKCLkuIrkvKDmlofku7blpLHotKXvvIzor7fph43or5UiKQogICAgICB0aGlzLiRtb2RhbC5jbG9zZUxvYWRpbmcoKQogICAgfSwKICAgIC8vIOS4iuS8oOaIkOWKn+WbnuiwgwogICAgaGFuZGxlVXBsb2FkU3VjY2VzcyhyZXMsIGZpbGUpIHsKICAgICAgaWYgKHJlcy5jb2RlID09PSAyMDApIHsKICAgICAgICB0aGlzLnVwbG9hZExpc3QucHVzaCh7IG5hbWU6IHJlcy5maWxlTmFtZSwgdXJsOiByZXMuZmlsZU5hbWUgfSkKICAgICAgICB0aGlzLnVwbG9hZGVkU3VjY2Vzc2Z1bGx5KCkKICAgICAgfSBlbHNlIHsKICAgICAgICB0aGlzLm51bWJlci0tCiAgICAgICAgdGhpcy4kbW9kYWwuY2xvc2VMb2FkaW5nKCkKICAgICAgICB0aGlzLiRtb2RhbC5tc2dFcnJvcihyZXMubXNnKQogICAgICAgIHRoaXMuJHJlZnMuZmlsZVVwbG9hZC5oYW5kbGVSZW1vdmUoZmlsZSkKICAgICAgICB0aGlzLnVwbG9hZGVkU3VjY2Vzc2Z1bGx5KCkKICAgICAgfQogICAgfSwKICAgIC8vIOWIoOmZpOaWh+S7tgogICAgaGFuZGxlRGVsZXRlKGluZGV4KSB7CiAgICAgIHRoaXMuZmlsZUxpc3Quc3BsaWNlKGluZGV4LCAxKQogICAgICB0aGlzLiRlbWl0KCJpbnB1dCIsIHRoaXMubGlzdFRvU3RyaW5nKHRoaXMuZmlsZUxpc3QpKQogICAgfSwKICAgIC8vIOS4iuS8oOe7k+adn+WkhOeQhgogICAgdXBsb2FkZWRTdWNjZXNzZnVsbHkoKSB7CiAgICAgIGlmICh0aGlzLm51bWJlciA+IDAgJiYgdGhpcy51cGxvYWRMaXN0Lmxlbmd0aCA9PT0gdGhpcy5udW1iZXIpIHsKICAgICAgICB0aGlzLmZpbGVMaXN0ID0gdGhpcy5maWxlTGlzdC5jb25jYXQodGhpcy51cGxvYWRMaXN0KQogICAgICAgIHRoaXMudXBsb2FkTGlzdCA9IFtdCiAgICAgICAgdGhpcy5udW1iZXIgPSAwCiAgICAgICAgdGhpcy4kZW1pdCgiaW5wdXQiLCB0aGlzLmxpc3RUb1N0cmluZyh0aGlzLmZpbGVMaXN0KSkKICAgICAgICB0aGlzLiRtb2RhbC5jbG9zZUxvYWRpbmcoKQogICAgICB9CiAgICB9LAogICAgLy8g6I635Y+W5paH5Lu25ZCN56ewCiAgICBnZXRGaWxlTmFtZShuYW1lKSB7CiAgICAgIC8vIOWmguaenOaYr3VybOmCo+S5iOWPluacgOWQjueahOWQjeWtlyDlpoLmnpzkuI3mmK/nm7TmjqXov5Tlm54KICAgICAgaWYgKG5hbWUubGFzdEluZGV4T2YoIi8iKSA+IC0xKSB7CiAgICAgICAgcmV0dXJuIG5hbWUuc2xpY2UobmFtZS5sYXN0SW5kZXhPZigiLyIpICsgMSkKICAgICAgfSBlbHNlIHsKICAgICAgICByZXR1cm4gbmFtZQogICAgICB9CiAgICB9LAogICAgLy8g5a+56LGh6L2s5oiQ5oyH5a6a5a2X56ym5Liy5YiG6ZqUCiAgICBsaXN0VG9TdHJpbmcobGlzdCwgc2VwYXJhdG9yKSB7CiAgICAgIGxldCBzdHJzID0gIiIKICAgICAgc2VwYXJhdG9yID0gc2VwYXJhdG9yIHx8ICIsIgogICAgICBmb3IgKGxldCBpIGluIGxpc3QpIHsKICAgICAgICBzdHJzICs9IGxpc3RbaV0udXJsICsgc2VwYXJhdG9yCiAgICAgIH0KICAgICAgcmV0dXJuIHN0cnMgIT0gJycgPyBzdHJzLnN1YnN0cigwLCBzdHJzLmxlbmd0aCAtIDEpIDogJycKICAgIH0KICB9Cn0K"},{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4CA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"src/components/FileUpload","sourcesContent":["<template>\n  <div class=\"upload-file\">\n    <el-upload\n      multiple\n      :action=\"uploadFileUrl\"\n      :before-upload=\"handleBeforeUpload\"\n      :file-list=\"fileList\"\n      :data=\"data\"\n      :limit=\"limit\"\n      :on-error=\"handleUploadError\"\n      :on-exceed=\"handleExceed\"\n      :on-success=\"handleUploadSuccess\"\n      :show-file-list=\"false\"\n      :headers=\"headers\"\n      class=\"upload-file-uploader\"\n      ref=\"fileUpload\"\n      v-if=\"!disabled\"\n    >\n      <!-- 上传按钮 -->\n      <el-button size=\"mini\" type=\"primary\">选取文件</el-button>\n      <!-- 上传提示 -->\n      <div class=\"el-upload__tip\" slot=\"tip\" v-if=\"showTip\">\n        请上传\n        <template v-if=\"fileSize\"> 大小不超过 <b style=\"color: #f56c6c\">{{ fileSize }}MB</b> </template>\n        <template v-if=\"fileType\"> 格式为 <b style=\"color: #f56c6c\">{{ fileType.join(\"/\") }}</b> </template>\n        的文件\n      </div>\n    </el-upload>\n\n    <!-- 文件列表 -->\n    <transition-group ref=\"uploadFileList\" class=\"upload-file-list el-upload-list el-upload-list--text\" name=\"el-fade-in-linear\" tag=\"ul\">\n      <li :key=\"file.url\" class=\"el-upload-list__item ele-upload-list__item-content\" v-for=\"(file, index) in fileList\">\n        <el-link :href=\"`${baseUrl}${file.url}`\" :underline=\"false\" target=\"_blank\">\n          <span class=\"el-icon-document\"> {{ getFileName(file.name) }} </span>\n        </el-link>\n        <div class=\"ele-upload-list__item-content-action\">\n          <el-link :underline=\"false\" @click=\"handleDelete(index)\" type=\"danger\" v-if=\"!disabled\">删除</el-link>\n        </div>\n      </li>\n    </transition-group>\n  </div>\n</template>\n\n<script>\nimport { getToken } from \"@/utils/auth\"\nimport Sortable from 'sortablejs'\n\nexport default {\n  name: \"FileUpload\",\n  props: {\n    // 值\n    value: [String, Object, Array],\n    // 上传接口地址\n    action: {\n      type: String,\n      default: \"/common/upload\"\n    },\n    // 上传携带的参数\n    data: {\n      type: Object\n    },\n    // 数量限制\n    limit: {\n      type: Number,\n      default: 5\n    },\n    // 大小限制(MB)\n    fileSize: {\n      type: Number,\n      default: 5\n    },\n    // 文件类型, 例如['png', 'jpg', 'jpeg']\n    fileType: {\n      type: Array,\n      default: () => [\"doc\", \"docx\", \"xls\", \"xlsx\", \"ppt\", \"pptx\", \"txt\", \"pdf\"]\n    },\n    // 是否显示提示\n    isShowTip: {\n      type: Boolean,\n      default: true\n    },\n    // 禁用组件（仅查看文件）\n    disabled: {\n      type: Boolean,\n      default: false\n    },\n    // 拖动排序\n    drag: {\n      type: Boolean,\n      default: true\n    }\n  },\n  data() {\n    return {\n      number: 0,\n      uploadList: [],\n      baseUrl: process.env.VUE_APP_BASE_API,\n      uploadFileUrl: process.env.VUE_APP_BASE_API + this.action, // 上传文件服务器地址\n      headers: {\n        Authorization: \"Bearer \" + getToken(),\n      },\n      fileList: []\n    }\n  },\n  mounted() {\n    if (this.drag && !this.disabled) {\n      this.$nextTick(() => {\n        const element = this.$refs.uploadFileList?.$el || this.$refs.uploadFileList\n        Sortable.create(element, {\n          ghostClass: 'file-upload-darg',\n          onEnd: (evt) => {\n            const movedItem = this.fileList.splice(evt.oldIndex, 1)[0]\n            this.fileList.splice(evt.newIndex, 0, movedItem)\n            this.$emit(\"input\", this.listToString(this.fileList))\n          }\n        })\n      })\n    }\n  },\n  watch: {\n    value: {\n      handler(val) {\n        if (val) {\n          let temp = 1\n          // 首先将值转为数组\n          const list = Array.isArray(val) ? val : this.value.split(',')\n          // 然后将数组转为对象数组\n          this.fileList = list.map(item => {\n            if (typeof item === \"string\") {\n              item = { name: item, url: item }\n            }\n            item.uid = item.uid || new Date().getTime() + temp++\n            return item\n          })\n        } else {\n          this.fileList = []\n          return []\n        }\n      },\n      deep: true,\n      immediate: true\n    }\n  },\n  computed: {\n    // 是否显示提示\n    showTip() {\n      return this.isShowTip && (this.fileType || this.fileSize)\n    },\n  },\n  methods: {\n    // 上传前校检格式和大小\n    handleBeforeUpload(file) {\n      // 校检文件类型\n      if (this.fileType) {\n        const fileName = file.name.split('.')\n        const fileExt = fileName[fileName.length - 1]\n        const isTypeOk = this.fileType.indexOf(fileExt) >= 0\n        if (!isTypeOk) {\n          this.$modal.msgError(`文件格式不正确，请上传${this.fileType.join(\"/\")}格式文件!`)\n          return false\n        }\n      }\n      // 校检文件名是否包含特殊字符\n      if (file.name.includes(',')) {\n        this.$modal.msgError('文件名不正确，不能包含英文逗号!')\n        return false\n      }\n      // 校检文件大小\n      if (this.fileSize) {\n        const isLt = file.size / 1024 / 1024 < this.fileSize\n        if (!isLt) {\n          this.$modal.msgError(`上传文件大小不能超过 ${this.fileSize} MB!`)\n          return false\n        }\n      }\n      this.$modal.loading(\"正在上传文件，请稍候...\")\n      this.number++\n      return true\n    },\n    // 文件个数超出\n    handleExceed() {\n      this.$modal.msgError(`上传文件数量不能超过 ${this.limit} 个!`)\n    },\n    // 上传失败\n    handleUploadError(err) {\n      this.$modal.msgError(\"上传文件失败，请重试\")\n      this.$modal.closeLoading()\n    },\n    // 上传成功回调\n    handleUploadSuccess(res, file) {\n      if (res.code === 200) {\n        this.uploadList.push({ name: res.fileName, url: res.fileName })\n        this.uploadedSuccessfully()\n      } else {\n        this.number--\n        this.$modal.closeLoading()\n        this.$modal.msgError(res.msg)\n        this.$refs.fileUpload.handleRemove(file)\n        this.uploadedSuccessfully()\n      }\n    },\n    // 删除文件\n    handleDelete(index) {\n      this.fileList.splice(index, 1)\n      this.$emit(\"input\", this.listToString(this.fileList))\n    },\n    // 上传结束处理\n    uploadedSuccessfully() {\n      if (this.number > 0 && this.uploadList.length === this.number) {\n        this.fileList = this.fileList.concat(this.uploadList)\n        this.uploadList = []\n        this.number = 0\n        this.$emit(\"input\", this.listToString(this.fileList))\n        this.$modal.closeLoading()\n      }\n    },\n    // 获取文件名称\n    getFileName(name) {\n      // 如果是url那么取最后的名字 如果不是直接返回\n      if (name.lastIndexOf(\"/\") > -1) {\n        return name.slice(name.lastIndexOf(\"/\") + 1)\n      } else {\n        return name\n      }\n    },\n    // 对象转成指定字符串分隔\n    listToString(list, separator) {\n      let strs = \"\"\n      separator = separator || \",\"\n      for (let i in list) {\n        strs += list[i].url + separator\n      }\n      return strs != '' ? strs.substr(0, strs.length - 1) : ''\n    }\n  }\n}\n</script>\n\n<style scoped lang=\"scss\">\n.file-upload-darg {\n  opacity: 0.5;\n  background: #c8ebfb;\n}\n.upload-file-uploader {\n  margin-bottom: 5px;\n}\n.upload-file-list .el-upload-list__item {\n  border: 1px solid #e4e7ed;\n  line-height: 2;\n  margin-bottom: 10px;\n  position: relative;\n}\n.upload-file-list .ele-upload-list__item-content {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  color: inherit;\n}\n.ele-upload-list__item-content-action .el-link {\n  margin-right: 10px;\n}\n</style>\n"]}]}