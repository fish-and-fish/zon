{"remainingRequest":"/Users/linglong/Documents/code/RuoYi-Vue/ruoyi-ui/node_modules/babel-loader/lib/index.js!/Users/linglong/Documents/code/RuoYi-Vue/ruoyi-ui/node_modules/quill/formats/code.js","dependencies":[{"path":"/Users/linglong/Documents/code/RuoYi-Vue/ruoyi-ui/node_modules/quill/formats/code.js","mtime":499162500000},{"path":"/Users/linglong/Documents/code/RuoYi-Vue/ruoyi-ui/babel.config.js","mtime":1754723517095},{"path":"/Users/linglong/Documents/code/RuoYi-Vue/ruoyi-ui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/linglong/Documents/code/RuoYi-Vue/ruoyi-ui/node_modules/babel-loader/lib/index.js","mtime":456789000000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:InVzZSBzdHJpY3QiOwoKdmFyIF9pbnRlcm9wUmVxdWlyZVdpbGRjYXJkID0gcmVxdWlyZSgiL1VzZXJzL2xpbmdsb25nL0RvY3VtZW50cy9jb2RlL1J1b1lpLVZ1ZS9ydW95aS11aS9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9pbnRlcm9wUmVxdWlyZVdpbGRjYXJkLmpzIikuZGVmYXVsdDsKdmFyIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQgPSByZXF1aXJlKCIvVXNlcnMvbGluZ2xvbmcvRG9jdW1lbnRzL2NvZGUvUnVvWWktVnVlL3J1b3lpLXVpL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2ludGVyb3BSZXF1aXJlRGVmYXVsdC5qcyIpLmRlZmF1bHQ7Ck9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCAiX19lc01vZHVsZSIsIHsKICB2YWx1ZTogdHJ1ZQp9KTsKZXhwb3J0cy5kZWZhdWx0ID0gZXhwb3J0cy5Db2RlQmxvY2tDb250YWluZXIgPSBleHBvcnRzLkNvZGUgPSB2b2lkIDA7CnJlcXVpcmUoImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5qb2luLmpzIik7CnJlcXVpcmUoImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5tYXAuanMiKTsKcmVxdWlyZSgiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LnNsaWNlLmpzIik7CnJlcXVpcmUoImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3QudG8tc3RyaW5nLmpzIik7CnJlcXVpcmUoImNvcmUtanMvbW9kdWxlcy9lc25leHQuaXRlcmF0b3IuY29uc3RydWN0b3IuanMiKTsKcmVxdWlyZSgiY29yZS1qcy9tb2R1bGVzL2VzbmV4dC5pdGVyYXRvci5tYXAuanMiKTsKdmFyIF9kZWZpbmVQcm9wZXJ0eTIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoIi9Vc2Vycy9saW5nbG9uZy9Eb2N1bWVudHMvY29kZS9SdW9ZaS1WdWUvcnVveWktdWkvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZGVmaW5lUHJvcGVydHkuanMiKSk7CnZhciBfY2xhc3NDYWxsQ2hlY2syID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlKCIvVXNlcnMvbGluZ2xvbmcvRG9jdW1lbnRzL2NvZGUvUnVvWWktVnVlL3J1b3lpLXVpL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2NsYXNzQ2FsbENoZWNrLmpzIikpOwp2YXIgX2NyZWF0ZUNsYXNzMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZSgiL1VzZXJzL2xpbmdsb25nL0RvY3VtZW50cy9jb2RlL1J1b1lpLVZ1ZS9ydW95aS11aS9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9jcmVhdGVDbGFzcy5qcyIpKTsKdmFyIF9jYWxsU3VwZXIyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlKCIvVXNlcnMvbGluZ2xvbmcvRG9jdW1lbnRzL2NvZGUvUnVvWWktVnVlL3J1b3lpLXVpL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2NhbGxTdXBlci5qcyIpKTsKdmFyIF9zdXBlclByb3BHZXQyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlKCIvVXNlcnMvbGluZ2xvbmcvRG9jdW1lbnRzL2NvZGUvUnVvWWktVnVlL3J1b3lpLXVpL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL3N1cGVyUHJvcEdldC5qcyIpKTsKdmFyIF9pbmhlcml0czIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoIi9Vc2Vycy9saW5nbG9uZy9Eb2N1bWVudHMvY29kZS9SdW9ZaS1WdWUvcnVveWktdWkvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvaW5oZXJpdHMuanMiKSk7CnZhciBfYmxvY2sgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoIi4uL2Jsb3RzL2Jsb2NrLmpzIikpOwp2YXIgX2JyZWFrID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlKCIuLi9ibG90cy9icmVhay5qcyIpKTsKdmFyIF9jdXJzb3IgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoIi4uL2Jsb3RzL2N1cnNvci5qcyIpKTsKdmFyIF9pbmxpbmUgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoIi4uL2Jsb3RzL2lubGluZS5qcyIpKTsKdmFyIF90ZXh0ID0gX2ludGVyb3BSZXF1aXJlV2lsZGNhcmQocmVxdWlyZSgiLi4vYmxvdHMvdGV4dC5qcyIpKTsKdmFyIF9jb250YWluZXIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoIi4uL2Jsb3RzL2NvbnRhaW5lci5qcyIpKTsKdmFyIF9xdWlsbCA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZSgiLi4vY29yZS9xdWlsbC5qcyIpKTsKdmFyIENvZGVCbG9ja0NvbnRhaW5lciA9IGV4cG9ydHMuQ29kZUJsb2NrQ29udGFpbmVyID0gLyojX19QVVJFX18qL2Z1bmN0aW9uIChfQ29udGFpbmVyKSB7CiAgZnVuY3Rpb24gQ29kZUJsb2NrQ29udGFpbmVyKCkgewogICAgKDAsIF9jbGFzc0NhbGxDaGVjazIuZGVmYXVsdCkodGhpcywgQ29kZUJsb2NrQ29udGFpbmVyKTsKICAgIHJldHVybiAoMCwgX2NhbGxTdXBlcjIuZGVmYXVsdCkodGhpcywgQ29kZUJsb2NrQ29udGFpbmVyLCBhcmd1bWVudHMpOwogIH0KICAoMCwgX2luaGVyaXRzMi5kZWZhdWx0KShDb2RlQmxvY2tDb250YWluZXIsIF9Db250YWluZXIpOwogIHJldHVybiAoMCwgX2NyZWF0ZUNsYXNzMi5kZWZhdWx0KShDb2RlQmxvY2tDb250YWluZXIsIFt7CiAgICBrZXk6ICJjb2RlIiwKICAgIHZhbHVlOiBmdW5jdGlvbiBjb2RlKGluZGV4LCBsZW5ndGgpIHsKICAgICAgcmV0dXJuIHRoaXMuY2hpbGRyZW4KICAgICAgLy8gQHRzLWV4cGVjdC1lcnJvcgogICAgICAubWFwKGZ1bmN0aW9uIChjaGlsZCkgewogICAgICAgIHJldHVybiBjaGlsZC5sZW5ndGgoKSA8PSAxID8gJycgOiBjaGlsZC5kb21Ob2RlLmlubmVyVGV4dDsKICAgICAgfSkuam9pbignXG4nKS5zbGljZShpbmRleCwgaW5kZXggKyBsZW5ndGgpOwogICAgfQogIH0sIHsKICAgIGtleTogImh0bWwiLAogICAgdmFsdWU6IGZ1bmN0aW9uIGh0bWwoaW5kZXgsIGxlbmd0aCkgewogICAgICAvLyBgXG5gcyBhcmUgbmVlZGVkIGluIG9yZGVyIHRvIHN1cHBvcnQgZW1wdHkgbGluZXMgYXQgdGhlIGJlZ2lubmluZyBhbmQgdGhlIGVuZC4KICAgICAgLy8gaHR0cHM6Ly9odG1sLnNwZWMud2hhdHdnLm9yZy9tdWx0aXBhZ2Uvc3ludGF4Lmh0bWwjZWxlbWVudC1yZXN0cmljdGlvbnMKICAgICAgcmV0dXJuICI8cHJlPlxuIi5jb25jYXQoKDAsIF90ZXh0LmVzY2FwZVRleHQpKHRoaXMuY29kZShpbmRleCwgbGVuZ3RoKSksICJcbjwvcHJlPiIpOwogICAgfQogIH1dLCBbewogICAga2V5OiAiY3JlYXRlIiwKICAgIHZhbHVlOiBmdW5jdGlvbiBjcmVhdGUodmFsdWUpIHsKICAgICAgdmFyIGRvbU5vZGUgPSAoMCwgX3N1cGVyUHJvcEdldDIuZGVmYXVsdCkoQ29kZUJsb2NrQ29udGFpbmVyLCAiY3JlYXRlIiwgdGhpcywgMikoW3ZhbHVlXSk7CiAgICAgIGRvbU5vZGUuc2V0QXR0cmlidXRlKCdzcGVsbGNoZWNrJywgJ2ZhbHNlJyk7CiAgICAgIHJldHVybiBkb21Ob2RlOwogICAgfQogIH1dKTsKfShfY29udGFpbmVyLmRlZmF1bHQpOwp2YXIgQ29kZUJsb2NrID0gZXhwb3J0cy5kZWZhdWx0ID0gLyojX19QVVJFX18qL2Z1bmN0aW9uIChfQmxvY2spIHsKICBmdW5jdGlvbiBDb2RlQmxvY2soKSB7CiAgICAoMCwgX2NsYXNzQ2FsbENoZWNrMi5kZWZhdWx0KSh0aGlzLCBDb2RlQmxvY2spOwogICAgcmV0dXJuICgwLCBfY2FsbFN1cGVyMi5kZWZhdWx0KSh0aGlzLCBDb2RlQmxvY2ssIGFyZ3VtZW50cyk7CiAgfQogICgwLCBfaW5oZXJpdHMyLmRlZmF1bHQpKENvZGVCbG9jaywgX0Jsb2NrKTsKICByZXR1cm4gKDAsIF9jcmVhdGVDbGFzczIuZGVmYXVsdCkoQ29kZUJsb2NrLCBudWxsLCBbewogICAga2V5OiAicmVnaXN0ZXIiLAogICAgdmFsdWU6IGZ1bmN0aW9uIHJlZ2lzdGVyKCkgewogICAgICBfcXVpbGwuZGVmYXVsdC5yZWdpc3RlcihDb2RlQmxvY2tDb250YWluZXIpOwogICAgfQogIH1dKTsKfShfYmxvY2suZGVmYXVsdCk7CigwLCBfZGVmaW5lUHJvcGVydHkyLmRlZmF1bHQpKENvZGVCbG9jaywgIlRBQiIsICcgICcpOwp2YXIgQ29kZSA9IGV4cG9ydHMuQ29kZSA9IC8qI19fUFVSRV9fKi9mdW5jdGlvbiAoX0lubGluZSkgewogIGZ1bmN0aW9uIENvZGUoKSB7CiAgICAoMCwgX2NsYXNzQ2FsbENoZWNrMi5kZWZhdWx0KSh0aGlzLCBDb2RlKTsKICAgIHJldHVybiAoMCwgX2NhbGxTdXBlcjIuZGVmYXVsdCkodGhpcywgQ29kZSwgYXJndW1lbnRzKTsKICB9CiAgKDAsIF9pbmhlcml0czIuZGVmYXVsdCkoQ29kZSwgX0lubGluZSk7CiAgcmV0dXJuICgwLCBfY3JlYXRlQ2xhc3MyLmRlZmF1bHQpKENvZGUpOwp9KF9pbmxpbmUuZGVmYXVsdCk7CkNvZGUuYmxvdE5hbWUgPSAnY29kZSc7CkNvZGUudGFnTmFtZSA9ICdDT0RFJzsKQ29kZUJsb2NrLmJsb3ROYW1lID0gJ2NvZGUtYmxvY2snOwpDb2RlQmxvY2suY2xhc3NOYW1lID0gJ3FsLWNvZGUtYmxvY2snOwpDb2RlQmxvY2sudGFnTmFtZSA9ICdESVYnOwpDb2RlQmxvY2tDb250YWluZXIuYmxvdE5hbWUgPSAnY29kZS1ibG9jay1jb250YWluZXInOwpDb2RlQmxvY2tDb250YWluZXIuY2xhc3NOYW1lID0gJ3FsLWNvZGUtYmxvY2stY29udGFpbmVyJzsKQ29kZUJsb2NrQ29udGFpbmVyLnRhZ05hbWUgPSAnRElWJzsKQ29kZUJsb2NrQ29udGFpbmVyLmFsbG93ZWRDaGlsZHJlbiA9IFtDb2RlQmxvY2tdOwpDb2RlQmxvY2suYWxsb3dlZENoaWxkcmVuID0gW190ZXh0LmRlZmF1bHQsIF9icmVhay5kZWZhdWx0LCBfY3Vyc29yLmRlZmF1bHRdOwpDb2RlQmxvY2sucmVxdWlyZWRDb250YWluZXIgPSBDb2RlQmxvY2tDb250YWluZXI7"},{"version":3,"names":["_block","_interopRequireDefault","require","_break","_cursor","_inline","_text","_interopRequireWildcard","_container","_quill","CodeBlockContainer","exports","_Container","_classCallCheck2","default","_callSuper2","arguments","_inherits2","_createClass2","key","value","code","index","length","children","map","child","domNode","innerText","join","slice","html","concat","escapeText","create","_superPropGet2","setAttribute","Container","CodeBlock","_Block","register","Quill","Block","_defineProperty2","Code","_Inline","Inline","blotName","tagName","className","allowedChildren","TextBlot","Break","Cursor","requiredContainer"],"sources":["../../src/formats/code.ts"],"sourcesContent":["import Block from '../blots/block.js';\nimport Break from '../blots/break.js';\nimport Cursor from '../blots/cursor.js';\nimport Inline from '../blots/inline.js';\nimport TextBlot, { escapeText } from '../blots/text.js';\nimport Container from '../blots/container.js';\nimport Quill from '../core/quill.js';\n\nclass CodeBlockContainer extends Container {\n  static create(value: string) {\n    const domNode = super.create(value) as Element;\n    domNode.setAttribute('spellcheck', 'false');\n    return domNode;\n  }\n\n  code(index: number, length: number) {\n    return (\n      this.children\n        // @ts-expect-error\n        .map((child) => (child.length() <= 1 ? '' : child.domNode.innerText))\n        .join('\\n')\n        .slice(index, index + length)\n    );\n  }\n\n  html(index: number, length: number) {\n    // `\\n`s are needed in order to support empty lines at the beginning and the end.\n    // https://html.spec.whatwg.org/multipage/syntax.html#element-restrictions\n    return `<pre>\\n${escapeText(this.code(index, length))}\\n</pre>`;\n  }\n}\n\nclass CodeBlock extends Block {\n  static TAB = '  ';\n\n  static register() {\n    Quill.register(CodeBlockContainer);\n  }\n}\n\nclass Code extends Inline {}\nCode.blotName = 'code';\nCode.tagName = 'CODE';\n\nCodeBlock.blotName = 'code-block';\nCodeBlock.className = 'ql-code-block';\nCodeBlock.tagName = 'DIV';\nCodeBlockContainer.blotName = 'code-block-container';\nCodeBlockContainer.className = 'ql-code-block-container';\nCodeBlockContainer.tagName = 'DIV';\n\nCodeBlockContainer.allowedChildren = [CodeBlock];\n\nCodeBlock.allowedChildren = [TextBlot, Break, Cursor];\nCodeBlock.requiredContainer = CodeBlockContainer;\n\nexport { Code, CodeBlockContainer, CodeBlock as default };\n"],"mappings":"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","ignoreList":[]}]}